name: Build and Upload to GitHub Releases

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  create_release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: v1.0.${{ github.run_number }}
          release_name: v1.0.${{ github.run_number }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build_linux:
    needs: create_release
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install PyInstaller
        run: |
          python -m pip install --upgrade pip
          pip install pyinstaller

      - name: Build Linux Executable
        run: |
          pyinstaller --onefile --noconsole auto_git_commit.py
          ls -la dist

      - name: Upload Linux Executable to GitHub Release
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ needs.create_release.outputs.upload_url }} # Correctly reference the output
          asset_path: dist/auto_git_commit
          asset_name: auto_git_commit-linux
          asset_content_type: application/octet-stream

  build_windows:
    needs: create_release
    runs-on: windows-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install PyInstaller
        run: |
          python -m pip install --upgrade pip
          pip install pyinstaller

      - name: Build Windows Executable
        run: |
          pyinstaller --onefile --noconsole auto_git_commit.py

      - name: Upload Windows Executable to GitHub Release
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ needs.create_release.outputs.upload_url }} # Correctly reference the output
          asset_path: dist/auto_git_commit.exe
          asset_name: auto_git_commit-windows.exe
          asset_content_type: application/octet-stream
