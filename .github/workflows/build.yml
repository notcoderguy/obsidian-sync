name: Build Executables

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install PyInstaller
        run: |
          python -m pip install --upgrade pip
          pip install pyinstaller

      - name: Add Timestamp to Python File
        run: |
          TIMESTAMP=$(date)
          echo "# Build timestamp: $TIMESTAMP" >> auto_git_commit.py
          echo "Timestamp added: $TIMESTAMP"
        
      - name: Build Windows Executable
        run: |
          pyinstaller --onefile --noconsole auto_git_commit.py
          ls -la dist  # List the contents of the dist directory
        env:
          OS: Windows

      - name: Build Linux Executable
        run: |
          pyinstaller --onefile --noconsole auto_git_commit.py
          ls -la dist  # List the contents of the dist directory

      - name: Create a Release
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: v1.0.${{ github.run_number }}
          release_name: "Build v1.0.${{ github.run_number }}"
          body: "Release for build v1.0.${{ github.run_number }}"
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Windows Executable to Release
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: dist/auto_git_commit.exe
          asset_name: auto_git_commit_windows.exe
          asset_content_type: application/octet-stream

      - name: Upload Linux Executable to Release
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: dist/auto_git_commit
          asset_name: auto_git_commit_linux
          asset_content_type: application/octet-stream
